<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.tagoplus.auth.service.UserMapper">
    
    <resultMap id="userMap" type="user" extends="commonMapper.generalMap">
    	<id 	property="seq" 				column="seq" />
    	<result property="username" 		column="username" />
    	<result property="password"			column="password" />
    	<result property="fullname"			column="fullname" />
    	<result property="email"			column="email" />
    	<result property="phone"			column="phone" />
    	<result property="lastLoginDate"	column="last_login_date" />
		<result property="createdDate"		column="created_date" />
		<result property="createdBy"		column="created_by" />
		<result property="modifiedDate"		column="modified_date" />
		<result property="modifiedBy"		column="modified_by" />
		<result property="isDeleted"		column="is_deleted" />
		<result property="fileGroupSeq"		column="file_group_seq" />
		<result property="tempPwd"			column="temp_pwd" />
		<result property="tempPwdCreDt"		column="temp_pwd_cre_dt"/>
		<result property="tempPwdEndDt"		column="temp_pwd_end_dt"/>
		<result property="gender"			column="gender" />
		<result property="mobile"			column="mobile"/>
		<result property="job"				column="job"/>
		<result property="zip"				column="zip" />
		<result property="addr"				column="addr"/>
		<result property="addrEtc"			column="addr_etc"/>
		<result property="birthday"			column="birthday"/>
		<result property="introduction"		column="introduction"/>
		<result property="useYn"			column="use_yn"/>
		<result property="memberTypeCd"		column="member_type_cd"/>
    </resultMap>
    
    <resultMap id="nestedResultMap" type="user" extends="userMap">
		<collection property="imageAtch" columnPrefix="IMG_" resultMap="kr.co.tagoplus.file.service.FileMapper.fileDetailMap" />
	</resultMap>

	<sql id="whereQuery">
		u.is_deleted = 'N'
		<if test="memberTypeCd != null and memberTypeCd != ''">
			AND u.member_type_cd = #{memberTypeCd}
		</if>
		<if test="searchWrd != null and searchWrd != ''">
			<if test="searchCondition == null or searchCondition == ''">
				AND  u.fullname LIKE CONCAT('%',#{searchWrd},'%')
				OR u.username LIKE CONCAT('%',#{searchWrd},'%')
				OR u.phone LIKE CONCAT('%',#{searchWrd},'%')
				OR c.person_in_charge LIKE CONCAT('%',#{searchWrd},'%')
				OR c.name LIKE CONCAT('%',#{searchWrd},'%')
				OR c.register_number LIKE CONCAT('%',#{searchWrd},'%')
			</if>
			<if test="searchCondition != null and searchCondition != '' ">
				<if test="searchCondition == 'name'">
					AND  u.fullname LIKE CONCAT('%',#{searchWrd},'%')
				</if>
				<if test="searchCondition == 'username'">
					AND  u.username LIKE CONCAT('%',#{searchWrd},'%')
				</if>
				<if test="searchCondition == 'phone'">
					AND  u.phone LIKE CONCAT('%',#{searchWrd},'%')
				</if>
				<if test="searchCondition == 'personInCharge'">
					AND   c.person_in_charge LIKE CONCAT('%',#{searchWrd},'%')
				</if>
				<if test="searchCondition == 'companyName'">
					AND   c.name LIKE CONCAT('%',#{searchWrd},'%')
				</if>
				<if test="searchCondition == 'registerNumber'">
					AND   c.register_number LIKE CONCAT('%',#{searchWrd},'%')
				</if>
			</if>
		</if>
	</sql>

    <select id="authenticate" resultMap="userMap">
    	SELECT *
		FROM t_user
		WHERE username = #{username} AND is_deleted = 'N'
    </select>
    
    <select id="getByUsername" resultMap="nestedResultMap">
    	SELECT u.*,
    		F.file_seq AS IMG_file_id, 
			F.file_group_seq AS IMG_file_grp_id, 
			F.file_name AS IMG_file_nm, 
			F.file_ext AS IMG_file_ext, 
			F.file_size AS IMG_file_size, 
			F.created_date AS IMG_create_dt, 
			F.stored_file_name AS IMG_stored_nm, 
			F.view_url AS IMG_url, 
			F.stored_path AS IMG_stored_path, 
			F.download_url AS IMG_download_url, 
			F.delete_url AS IMG_delete_url
		FROM 
			t_user u
		LEFT JOIN 
			t_file F ON F.file_group_seq = u.file_group_seq AND IFNULL(F.is_deleted, 'N') = 'N'
		WHERE u.username = #{username} AND u.is_deleted = 'N'
    </select>
    
    <select id="getById" resultMap="nestedResultMap">
    	SELECT 
			u.seq, u.username, u.fullname, u.email, u.phone, u.last_login_date, u.created_date, u.created_by, u.modified_date, u.modified_by, u.is_deleted,
			u.file_group_seq, u.use_yn, u.gender, u.mobile, u.job, u.zip, u.addr, u.addr_etc, u.introduction, u.birthday, u.member_type_cd,
			F.file_seq AS IMG_file_id, 
			F.file_group_seq AS IMG_file_grp_id, 
			F.file_name AS IMG_file_nm, 
			F.file_ext AS IMG_file_ext, 
			F.file_size AS IMG_file_size, 
			F.created_date AS IMG_create_dt, 
			F.stored_file_name AS IMG_stored_nm, 
			F.view_url AS IMG_url, 
			F.stored_path AS IMG_stored_path, 
			F.download_url AS IMG_download_url, 
			F.delete_url AS IMG_delete_url, 
			F.is_deleted AS IMG_is_deleted    		
		FROM 
			t_user u
		LEFT JOIN 
			t_file F ON F.file_group_seq = u.file_group_seq AND IFNULL(F.is_deleted, 'N') = 'N'
		WHERE u.is_deleted = 'N' AND u.seq = #{seq, jdbcType=INTEGER}
    </select>

	<select id="getAll" resultMap="userMap">
    	SELECT *
		FROM t_user
		WHERE is_deleted = 'N'
    </select>

	<select id="getByFilter" parameterType="map" resultMap="userMap">
		SELECT u.*, c.*
		FROM t_user u
		LEFT JOIN t_company c
			ON u.seq = c.user_seq
		<where>
			<include refid="whereQuery" />
		</where>
		<choose>
			<when test="page.sort.sorted == true">
				ORDER BY
				<foreach collection="page.sort.orders" item="sortOrder" separator=",">
					${sortOrder.property} ${sortOrder.direction.name}
				</foreach>
			</when>
			<otherwise>
				ORDER BY u.seq DESC
			</otherwise>
		</choose>
		<include refid="commonMapper.pagingQuery" />
	</select>

	<select id="getList" parameterType="map" resultMap="userMap">
		SELECT u.*, c.*
		FROM t_user u
		LEFT JOIN t_company c
		ON u.seq = c.user_seq
		<where>
			<include refid="whereQuery" />
		</where>
		ORDER BY u.fullname
	</select>

	<select id="existByUsername" resultType="boolean">
        SELECT COUNT(username) > 0
        FROM t_user
        WHERE is_deleted = 'N' AND username = #{username,jdbcType=VARCHAR}
    </select>
    
    <select id="existByPhone" resultType="boolean">
        SELECT COUNT(username) > 0
        FROM t_user
        WHERE is_deleted = 'N' AND phone = #{phone,jdbcType=VARCHAR}
    </select>
    
    <select id="existByEmail" resultType="boolean">
        SELECT COUNT(username) > 0
        FROM t_user
        WHERE is_deleted = 'N' AND email = #{email,jdbcType=VARCHAR}
    </select>

	<select id="countByFilter" parameterType="java.util.Map" resultType="long">
		SELECT count(u.username)
		FROM t_user u
		LEFT JOIN t_company c
			ON u.seq = c.user_seq
		<where>
			<include refid="whereQuery" />
		</where>
	</select>

	<select id="getByFullnameAndEmail" resultMap="userMap">
        SELECT *
        FROM t_user
        WHERE is_deleted = 'N'
        	AND fullname = #{fullname}
        	AND email = #{email}
        <!-- <if test="seq != null and seq != ''">
        	AND seq <![CDATA[<>]]> #{seq}
        </if> -->
    </select>

	<select id="getAllUserCount" resultType="integer">
		SELECT count(1)
		FROM t_user
		WHERE is_deleted = 'N'
	</select>

	<select id="getAllRegisteredUserLastMonthCount" resultType="integer">
		SELECT count(1)
		FROM t_user
		WHERE is_deleted = 'N'
		<![CDATA[
			AND created_date > #{validDate,jdbcType=VARCHAR}
		]]>
	</select>
    
    <select id="getByEmail" resultMap="userMap">
        SELECT *
        FROM t_user
        WHERE username = #{email}
    </select>

	<select id="getUserListWithRoleId" resultMap="userMap">
		SELECT * FROM t_user
		WHERE is_deleted = 'N'
			AND user_id IN (
			SELECT rum.user_id FROM	role_user_map rum WHERE	rum.role_id = #{roleId} and rum.is_deleted='N')
	</select>

	<select id="getUserListWithoutRoleId" resultMap="userMap">
		SELECT * FROM t_user
		WHERE is_deleted = 'N'
			AND user_id NOT IN (
			SELECT rum.user_id FROM	role_user_map rum WHERE	rum.role_id = #{roleId})
		UNION
		SELECT * FROM t_user
		WHERE is_deleted = 'N'
			AND user_id IN (
			SELECT rum.user_id FROM	role_user_map rum WHERE	rum.role_id = #{roleId} and rum.is_deleted='Y')

	</select>

	<resultMap id="nestedResultMapWithCompany" type="user" extends="userMap">
		<association property="company" columnPrefix="COMPANY_" resultMap="kr.co.tagoplus.auth.service.CompanyMapper.companyMap" />
		<collection property="imageAtch" columnPrefix="IMG_" resultMap="kr.co.tagoplus.file.service.FileMapper.fileDetailMap" />
	</resultMap>

	<select id="getWithCompanyInfoByUserSeq" resultMap="nestedResultMapWithCompany">
    	SELECT
			u.*,
			c.seq				COMPANY_seq,
			c.user_seq  		COMPANY_user_seq,
			c.name 				COMPANY_name,
			c.ceo_name 			COMPANY_ceo_name,
			c.person_in_charge 	COMPANY_person_in_charge,
			c.register_number 	COMPANY_register_number,
			c.phone 			COMPANY_phone,
			c.email 			COMPANY_email,
			F.file_seq AS IMG_file_id,
			F.file_group_seq AS IMG_file_grp_id,
			F.file_name AS IMG_file_nm,
			F.file_ext AS IMG_file_ext,
			F.file_size AS IMG_file_size,
			F.created_date AS IMG_create_dt,
			F.stored_file_name AS IMG_stored_nm,
			F.view_url AS IMG_url,
			F.stored_path AS IMG_stored_path,
			F.download_url AS IMG_download_url,
			F.delete_url AS IMG_delete_url,
			F.is_deleted AS IMG_is_deleted
		FROM
			t_user u
		LEFT JOIN t_company c ON c.user_seq = u.seq
		LEFT JOIN
			t_file F ON F.file_group_seq = u.file_group_seq AND IFNULL(F.is_deleted, 'N') = 'N'
		WHERE u.is_deleted = 'N' AND u.seq = #{seq, jdbcType=INTEGER}
    </select>

	<insert id="insert" useGeneratedKeys="true" keyProperty="seq" parameterType="user">
    	INSERT INTO t_user (
    		username, 
    		password, 
    		fullname,
    		email,
    		phone, 
    		last_login_date,    		 
    		created_date, 
    		created_by,  
    		is_deleted,
    		file_group_seq,
    		use_yn,
    		gender,
    		mobile,
    		job,
    		zip,
    		addr,
    		addr_etc,
    		birthday,
    		introduction,
    	    member_type_cd
    	) VALUES (
    		#{username}, 
    		#{password},
    		#{fullname}, 
    		#{email}, 
    		#{phone},
    		#{lastLoginDate},    		 
    		DATE_FORMAT(CURRENT_TIMESTAMP, '%Y-%m-%d %H:%i:%s'), 
    		#{createdBy}, 
    		'N',
    		#{fileGroupSeq},
    		'Y',
    		#{gender},
    		#{mobile},
    		#{job},
    		#{zip},
    		#{addr},
    		#{addrEtc},
    		#{birthday},
    		#{introduction},
    		#{memberTypeCd}
    	)    	
    </insert>

    <update id="deleteById">
    	UPDATE t_user 
    	SET is_deleted = 'Y'
    	WHERE seq = #{seq, jdbcType=VARCHAR}
    </update>
    
    <update id="resetPassword">
    	UPDATE t_user 
    	SET password = #{password}
    	WHERE username = #{username}
    </update>

	<update id="update" parameterType="user">
		UPDATE
		t_user
		SET
		<if test = "username != null and username != ''">
			username = #{username,jdbcType = VARCHAR},
		</if>
		<if test = "password != null and password != ''">
			password = #{password,jdbcType = VARCHAR},
		</if>
		<if test = "fullname != null and fullname != ''">
			fullname = #{fullname,jdbcType = VARCHAR},
		</if>
		<if test = "lastLoginDate != null and lastLoginDate != ''">
			last_login_date = #{lastLoginDate,jdbcType = VARCHAR},
		</if>
		<if test = "email != null and email != ''">
			email = #{email,jdbcType = VARCHAR},
		</if>
		<if test = "tempPwd != null and tempPwd != ''">
			temp_pwd = #{tempPwd,jdbcType = VARCHAR},
		</if>
		<if test = "tempPwdCreDt != null and tempPwdCreDt != ''">
			temp_pwd_cre_dt = #{tempPwdCreDt,jdbcType = VARCHAR},
		</if>
		<if test="tempPwdEndDt != null and tempPwdEndDt != ''">
			temp_pwd_end_dt = #{tempPwdEndDt,jdbcType = VARCHAR},
		</if>
		<if test="useYn != null and useYn != ''">
			use_yn = #{useYn,jdbcType = VARCHAR},
		</if>
		<if test="gender != null and gender != ''">
			gender = #{gender,jdbcType = VARCHAR},
		</if>
		<if test="mobile != null and mobile != ''">
			mobile = #{mobile,jdbcType = VARCHAR},
		</if>
		<if test="job != null and job != ''">
			job = #{job,jdbcType = VARCHAR},
		</if>
		<if test="zip != null and zip != ''">
			zip = #{zip,jdbcType = VARCHAR},
		</if>
		<if test="addr != null and addr != ''">
			addr = #{addr,jdbcType = VARCHAR},
		</if>
		<if test="addrEtc != null and addrEtc != ''">
			addr_etc = #{addrEtc,jdbcType = VARCHAR},
		</if>
		<if test="birthday != null and birthday != ''">
			birthday = #{birthday, jdbcType = VARCHAR},
		</if>
		<if test="introduction != null and introduction != ''">
			introduction = #{introduction, jdbcType = VARCHAR},
		</if>
		<if test = "modifiedBy != null and modifiedBy != ''">
			modified_by = #{modifiedBy,jdbcType = VARCHAR},
		</if>
		<if test = "memberTypeCd != null and memberTypeCd != ''">
			member_type_cd = #{memberTypeCd,jdbcType = VARCHAR},
		</if>
		modified_date = #{modifiedDate,jdbcType = VARCHAR}
		WHERE
		seq = #{seq, jdbcType=INTEGER}
	</update>

	<update id="updateLastLoginDate">
    	UPDATE t_user
    	SET last_login_dt = #{loginDate}
    	WHERE user_id = #{username}
    </update>


	<select id="canUseUsername" resultType="boolean">
        SELECT COUNT(id) = 0
		FROM t_user
		WHERE is_deleted = 'N' 
			AND username = #{username}
    </select>
    
    <select id="canUseEmail" resultType="boolean">
        SELECT COUNT(id) = 0
		FROM t_user
		WHERE is_deleted = 'N'
			AND email = #{email} 
			AND username != #{username}
    </select>

</mapper>
