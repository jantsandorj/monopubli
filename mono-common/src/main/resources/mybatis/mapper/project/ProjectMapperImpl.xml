<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.tagoplus.project.service.ProjectMapper">

    <resultMap id="projectMap" type="project"       extends="commonMapper.generalMap">
        <id 	property="seq" 				        column="seq" />
        <result property="userSeq" 			        column="user_seq" />
        <result property="name" 		            column="name" />
        <result property="figmaAddr"			    column="figma_addr" />
        <result property="userMemo"	                column="user_memo" />
        <result property="vatTypeCd"	            column="vat_type_cd" />
        <result property="userEstimatedEndDate"		column="user_estimated_end_date" />
        <result property="statusCd"			        column="status_cd" />
        <result property="adminEstimatedEndDate"	column="admin_estimated_end_date" />
        <result property="adminMemo"			    column="admin_memo" />
        <result property="filePassword"			    column="file_password" />
        <result property="process"			        column="process" />
        <result property="situation"			    column="situation" />
        <result property="fileGroupSeq"		        column="file_group_seq" />
        <result property="sourceFileGroupSeq"		column="source_file_group_seq" />
        <result property="createdBy"		        column="created_by" />
        <result property="createdDate"		        column="created_date" />
        <result property="modifiedBy"		        column="modified_by" />
        <result property="modifiedDate"		        column="modified_date" />
        <result property="isDeleted"		        column="is_deleted" />
        <result property="hasMiddlePayment"		    column="has_middle_payment" />
        <result property="paymentType"		        column="payment_type" />

        <result property="username"		            column="username" />
        <result property="fullname"		            column="fullname" />
        <result property="memberTypeCd"		        column="member_type_cd" />
        <result property="phone"		            column="phone" />
        <result property="email"		            column="email" />
        <result property="companyName"		        column="company_name" />
        <result property="vatPrice"		            column="vat_price" />
        <result property="vatNotPrice"		        column="vat_not_price" />
        <result property="adminSeq"		            column="admin_seq" />
        <result property="actualStartDate"		    column="actual_start_date" />
        <result property="actualEndDate"		    column="actual_end_date" />

        <result property="managerItemTotal"		    column="manager_item_total" />
        <result property="managerItemDone"		    column="manager_item_done" />
        <result property="workerItemTotal"		    column="worker_item_total" />
        <result property="workerItemDone"		    column="worker_item_done" />
        <result property="totalNum"		            column="total_num" />
    </resultMap>

    <resultMap id="nestedResultMap" type="project" extends="projectMap">
        <collection property="attachments" columnPrefix="ATCH_" resultMap="kr.co.tagoplus.file.service.FileMapper.fileDetailMap" />
        <collection property="projectPayments" ofType="projectPayment"    column="seq"    select="kr.co.tagoplus.project.service.ProjectPaymentMapper.getByProjectSeq" />
        <collection property="managerList" ofType="admin"    column="seq"    select="kr.co.tagoplus.auth.service.AdminMapper.getManagerByProjectSeq" />
        <collection property="workerList" ofType="admin"    column="seq"    select="kr.co.tagoplus.auth.service.AdminMapper.getWorkerByProjectSeq" />
        <collection property="comments" ofType="comment"    column="seq"    select="kr.co.tagoplus.project.service.CommentMapper.getByProjectSeq" />
        <collection property="projectItemList" ofType="projectItem"    column="seq"    select="kr.co.tagoplus.project.service.ProjectItemMapper.getByProjectSeq" />
    </resultMap>

    <sql id="whereQuery">
        a.is_deleted = 'N'
        <if test="userSeq != null and userSeq != ''">
            AND a.user_seq = #{userSeq}
        </if>
        <if test="(startDate != null and startDate != '') || (endDate != null and endDate != '') ">
            <if test="paymentType == 'ALL' ">
                AND DATE_FORMAT(tpp.actual_date, '%Y-%m-%d 00:00:00') >= #{startDate} AND DATE_FORMAT(tpp.actual_date, '%Y-%m-%d 00:00:00') <![CDATA[<=]]>  #{endDate}
            </if>
            <if test="paymentType != null and paymentType != 'ALL' ">
                AND tpp.payment_type = #{paymentType} AND DATE_FORMAT(tpp.actual_date, '%Y-%m-%d 00:00:00') >= #{startDate} AND DATE_FORMAT(tpp.actual_date, '%Y-%m-%d 00:00:00') <![CDATA[<=]]>  #{endDate}
            </if>
            <if test="searchDate == 'actualDate' ">
                AND DATE_FORMAT(a.actual_start_date, '%Y-%m-%d 00:00:00') >= #{startDate} AND DATE_FORMAT(a.actual_end_date, '%Y-%m-%d 00:00:00') <![CDATA[<=]]>  #{endDate}
            </if>
            <if test="searchDate == 'createdDate' ">
                AND DATE_FORMAT(a.created_date, '%Y-%m-%d 00:00:00') >= #{startDate} AND DATE_FORMAT(a.created_date, '%Y-%m-%d 00:00:00') <![CDATA[<=]]>  #{endDate}
            </if>
        </if>
        <if test="statusCd != null and statusCd != '' and statusCd != 'completed' and statusCd != 'new'">
            AND a.status_cd = #{statusCd}
        </if>
        <if test="statusCd == 'new'">
            AND a.status_cd in ('R','E','C')
        </if>
        <if test="statusCd == 'completed'">
            AND a.status_cd  in ('D','P')
        </if>
        <if test="searchWrd != null and searchWrd != ''">
            <if test="searchCondition == 'all'">
                AND (u.username LIKE CONCAT('%', #{searchWrd,jdbcType=VARCHAR}, '%') ||c.name LIKE CONCAT('%', #{searchWrd,jdbcType=VARCHAR}, '%') || a.name LIKE CONCAT('%', #{searchWrd,jdbcType=VARCHAR}, '%'))
            </if>
            <if test="searchCondition == 'username'">
                AND (u.username LIKE CONCAT('%', #{searchWrd,jdbcType=VARCHAR}, '%'))
            </if>
            <if test="searchCondition == 'companyName'">
                AND (c.name LIKE CONCAT('%', #{searchWrd,jdbcType=VARCHAR}, '%'))
            </if>
            <if test="searchCondition == 'projectName'">
                AND (a.name LIKE CONCAT('%', #{searchWrd,jdbcType=VARCHAR}, '%'))
            </if>
            <if test="searchCondition == 'fullname'">
                AND (u.fullname LIKE CONCAT('%', #{searchWrd,jdbcType=VARCHAR}, '%'))
            </if>
        </if>
    </sql>

    <select id="getByFilter"  resultMap="nestedResultMap">
        SELECT
            a.*,
            u.username,
            c.name as companyName,
            tpp.payment_type as PAY_PAYMENT_TYPE,
            tpp.price AS PAY_PRICE,
            tpp.estimated_date AS PAY_ESTIMATED_DATE,
            tpp.actual_date AS PAY_ACTUAL_DATE
            <if test="ongoing == 'true'">
                ,(SELECT count(tpi.seq) FROM t_project_item tpi WHERE tpi.project_seq  = a.seq) AS manager_item_total
                ,(SELECT count(case WHEN tpi.is_completed_manager = 'Y' then 1 else null end) FROM t_project_item tpi WHERE tpi.project_seq  = a.seq) AS manager_item_done
                ,(SELECT count(pia.project_seq) FROM project_item_admin pia WHERE pia.project_seq  = a.seq) AS worker_item_total
                ,(SELECT count(case WHEN pia.is_completed_worker  = 'Y' then 1 else null end) FROM project_item_admin pia WHERE pia.project_seq  = a.seq) AS worker_item_done
            </if>
        FROM t_project a
        LEFT JOIN t_user u on u.seq = a.user_seq
        LEFT JOIN t_company c on c.user_seq = u.seq
        LEFT JOIN t_project_payment tpp on tpp.project_seq = a.seq
        <where>
            <include refid="whereQuery" />
        </where>
        <choose>
            <when test="page.sort.sorted == true">
                ORDER BY
                <foreach collection="page.sort.orders" item="sortOrder" separator=",">
                    ${sortOrder.property} ${sortOrder.direction.name}
                </foreach>
            </when>
            <otherwise>
                ORDER BY a.seq DESC
            </otherwise>
        </choose>
        <include refid="commonMapper.pagingQuery" />

    </select>

    <select id="countByFilter" parameterType="java.util.Map" resultType="long">
        SELECT count(a.seq)
        FROM t_project a
        <where>
            <include refid="whereQuery" />
        </where>
    </select>

    <select id="getById" resultMap="nestedResultMap">
        SELECT A.*,
               U.fullname,
               U.phone,
               U.email,
               C.name AS COMPANY_NAME,
               tpp.payment_type as PAY_PAYMENT_TYPE,
               tpp.price AS PAY_PRICE,
               tpp.estimated_date AS PAY_ESTIMATED_DATE,
               tpp.actual_date AS PAY_ACTUAL_DATE,
                (SELECT count(tpi.seq) FROM t_project_item tpi WHERE tpi.project_seq  = a.seq) AS manager_item_total,
                (SELECT count(case WHEN tpi.is_completed_manager = 'Y' then 1 else null end) FROM t_project_item tpi WHERE tpi.project_seq  = a.seq) AS manager_item_done,
                (SELECT count(pia.project_seq) FROM project_item_admin pia WHERE pia.project_seq  = a.seq) AS worker_item_total,
                (SELECT count(case WHEN pia.is_completed_worker  = 'Y' then 1 else null end) FROM project_item_admin pia WHERE pia.project_seq  = a.seq) AS worker_item_done,
               F.file_seq AS ATCH_file_id,
               F.file_group_seq AS ATCH_file_grp_id,
               F.file_name AS ATCH_file_nm,
               F.file_ext AS ATCH_file_ext,
               F.file_size AS ATCH_file_size,
               F.created_date AS ATCH_create_dt,
               F.stored_file_name AS ATCH_stored_nm,
               F.view_url AS ATCH_url,
               F.stored_path AS ATCH_stored_path,
               F.download_url AS ATCH_download_url,
               F.delete_url AS ATCH_delete_url,
               F.is_deleted AS ATCH_is_deleted
        FROM t_project A
         LEFT join t_user U ON U.seq = A.user_seq
         LEFT JOIN t_company C ON C.user_seq = A.user_seq
         LEFT JOIN t_project_payment tpp on tpp.project_seq = a.seq
         LEFT JOIN t_file F ON F.file_group_seq = A.file_group_seq AND IFNULL(F.is_deleted, 'N') = 'N'
        WHERE A.is_deleted = 'N' AND A.seq = #{seq, jdbcType=VARCHAR}
    </select>

    <select id="getListByUser"  resultMap="nestedResultMap">
        SELECT
            a.*
        FROM t_project a
        <where>
            <include refid="whereQuery" />
        </where>
        <choose>
            <when test="page.sort.sorted == true">
                ORDER BY
                <foreach collection="page.sort.orders" item="sortOrder" separator=",">
                    ${sortOrder.property} ${sortOrder.direction.name}
                </foreach>
            </when>
            <otherwise>
                ORDER BY a.seq DESC
            </otherwise>
        </choose>
        <include refid="commonMapper.pagingQuery" />
    </select>

    <select id="getByUserWithLimit" parameterType="Long" resultMap="nestedResultMap">
        SELECT
            a.seq,
            a.user_seq,
            a.name,
            a.status_cd,
            (SELECT count(tpi.seq) FROM t_project_item tpi WHERE tpi.project_seq  = a.seq) AS manager_item_total,
            (SELECT count(case WHEN tpi.is_completed_manager = 'Y' then 1 else null end) FROM t_project_item tpi WHERE tpi.project_seq  = a.seq) AS manager_item_done,
            (SELECT count(pia.project_seq) FROM project_item_admin pia WHERE pia.project_seq  = a.seq) AS worker_item_total,
            (SELECT count(case WHEN pia.is_completed_worker  = 'Y' then 1 else null end) FROM project_item_admin pia WHERE pia.project_seq  = a.seq) AS worker_item_done
        FROM t_project a
        WHERE
            a.is_deleted = 'N' AND a.user_seq = #{userSeq}
        ORDER BY a.created_date desc
        LIMIT 0,3
    </select>

    <select id="getStatistic" resultMap="nestedResultMap">
        SELECT
            a.status_cd,
            count(a.seq) AS total_num
        FROM t_project a
        WHERE a.is_deleted = 'N' AND a.status_cd IN ('C', 'I', 'P')
        GROUP BY a.status_cd
    </select>

    <select id="getCompletedByLimit" resultMap="nestedResultMap">
        SELECT
            a.seq,
            a.name,
            a.vat_price,
            u.member_type_cd,
            CASE
                WHEN u.member_type_cd = 'MT_01' THEN u.fullname
                ELSE (SELECT name  FROM t_company WHERE user_seq = u.seq)
            END AS fullname
        FROM t_project a
        LEFT JOIN t_user u ON u.seq = a.user_seq
        WHERE a.is_deleted = 'N' AND a.status_cd = 'P'
        ORDER BY a.vat_price DESC
        LIMIT 0,5
    </select>


    <insert id="insert">
        INSERT INTO t_project (
            user_seq,
            name,
            figma_addr,
            user_estimated_end_date,
            vat_type_cd,
            user_memo,
            status_cd,
            file_group_seq,
            created_by,
            created_date,
            is_deleted
        ) VALUES (
             #{userSeq},
             #{name},
             #{figmaAddr},
             #{userEstimatedEndDate},
             #{vatTypeCd},
             #{userMemo},
             #{statusCd},
             #{fileGroupSeq},
             #{createdBy},
             DATE_FORMAT(CURRENT_TIMESTAMP, '%Y-%m-%d %H:%i:%s'),
             'N'
         )
    </insert>

    <insert id="insertManager">
        INSERT INTO project_admin (
            project_seq,
            admin_seq
        ) VALUES (
             #{seq},
             #{adminSeq}
        )
    </insert>

    <update id="deleteManager">
        DELETE FROM project_admin
        WHERE project_seq = #{seq} and admin_seq = #{adminSeq}
    </update>

    <update id="deleteManagerByProjectSeq">
        DELETE FROM project_admin
        WHERE project_seq = #{seq}
    </update>

    <update id="update" parameterType="project">
        UPDATE t_project
        SET
            <if test = "name != null and name != ''">
                name = #{name,jdbcType = VARCHAR},
            </if>
            <if test = "figmaAddr != null and figmaAddr != ''">
                figma_addr = #{figmaAddr,jdbcType = VARCHAR},
            </if>
            <if test = "userEstimatedEndDate != null and userEstimatedEndDate != ''">
                user_estimated_end_date = #{userEstimatedEndDate,jdbcType = VARCHAR},
            </if>
            <if test = "vatTypeCd != null and vatTypeCd != ''">
                vat_type_cd = #{vatTypeCd,jdbcType = VARCHAR},
            </if>
            <if test = "userMemo != null and userMemo != ''">
                user_memo = #{userMemo,jdbcType = VARCHAR},
            </if>
            <if test = "statusCd != null and statusCd != ''">
                status_cd = #{statusCd,jdbcType = VARCHAR},
            </if>
            <if test = "fileGroupSeq != null and fileGroupSeq != ''">
                file_group_seq = #{fileGroupSeq,jdbcType = VARCHAR},
            </if>
            <if test = "situation != null and situation != ''">
                situation = #{situation,jdbcType = VARCHAR},
            </if>
            <if test = "modifiedBy != null and modifiedBy != ''">
                modified_by = #{modifiedBy,jdbcType = VARCHAR},
            </if>
            modified_date = #{modifiedDate,jdbcType = VARCHAR}
        WHERE
            seq = #{seq, jdbcType=VARCHAR}
    </update>

    <update id="updatePrice" parameterType="project">
        UPDATE t_project
        SET
            <if test="vatPrice != null and vatPrice != ''">
                vat_price = #{vatPrice,jdbcType = VARCHAR},
            </if>
            <if test = "vatNotPrice != null and vatNotPrice != ''">
                vat_not_price = #{vatNotPrice,jdbcType = VARCHAR},
            </if>
            <if test = "modifiedBy != null and modifiedBy != ''">
                modified_by = #{modifiedBy,jdbcType = VARCHAR},
            </if>
            modified_date = #{modifiedDate,jdbcType = VARCHAR}
        WHERE
            seq = #{seq, jdbcType=VARCHAR}
    </update>

    <update id="updateDetail" parameterType="project">
        UPDATE t_project
        SET
            <if test = "statusCd != null and statusCd != ''">
                status_cd = #{statusCd,jdbcType = VARCHAR},
            </if>
            <if test = "adminEstimatedEndDate != null and adminEstimatedEndDate != ''">
                admin_estimated_end_date = #{adminEstimatedEndDate,jdbcType = VARCHAR},
            </if>
            <if test = "adminMemo != null and adminMemo != ''">
                admin_memo = #{adminMemo,jdbcType = VARCHAR},
            </if>
            <if test = "actualStartDate != null and actualStartDate != ''">
                actual_start_date = #{actualStartDate,jdbcType = VARCHAR},
            </if>
            <if test = "actualEndDate != null and actualEndDate != ''">
                actual_end_date = #{actualEndDate,jdbcType = VARCHAR},
            </if>
            <if test = "hasMiddlePayment != null and hasMiddlePayment != ''">
                has_middle_payment = #{hasMiddlePayment,jdbcType = VARCHAR},
            </if>
            <if test = "paymentType != null and paymentType != ''">
                payment_type = #{paymentType,jdbcType = VARCHAR},
            </if>
            <if test = "modifiedBy != null and modifiedBy != ''">
                modified_by = #{modifiedBy,jdbcType = VARCHAR},
            </if>
            modified_date = #{modifiedDate,jdbcType = VARCHAR}
        WHERE
            seq = #{seq, jdbcType=VARCHAR}
    </update>

    <update id="updateProcess" parameterType="project">
        UPDATE t_project
        SET
            <if test="process != null and process != ''">
                process = #{process,jdbcType = VARCHAR},
            </if>
            <if test = "modifiedBy != null and modifiedBy != ''">
                modified_by = #{modifiedBy,jdbcType = VARCHAR},
            </if>
            modified_date = #{modifiedDate,jdbcType = VARCHAR}
        WHERE
           seq = #{seq, jdbcType=VARCHAR}
    </update>

    <update id="updateSource" parameterType="project">
        UPDATE t_project
        SET
            <if test="filePassword != null and filePassword != ''">
                file_password = #{filePassword,jdbcType = VARCHAR},
            </if>
            <if test="sourceFileGroupSeq != null and sourceFileGroupSeq != ''">
                source_file_group_seq = #{sourceFileGroupSeq,jdbcType = VARCHAR},
            </if>
            <if test = "modifiedBy != null and modifiedBy != ''">
                modified_by = #{modifiedBy,jdbcType = VARCHAR},
            </if>
            modified_date = #{modifiedDate,jdbcType = VARCHAR}
        WHERE
            seq = #{seq, jdbcType=VARCHAR}
    </update>

</mapper>
