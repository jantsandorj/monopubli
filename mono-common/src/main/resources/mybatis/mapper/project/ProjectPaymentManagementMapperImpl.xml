<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.tagoplus.project.service.ProjectPaymentManagementMapper">

    <resultMap id="projectMap" type="project"       extends="commonMapper.generalMap">
        <id 	property="seq" 				        column="seq" />
        <result property="userSeq" 			        column="user_seq" />
        <result property="name" 		            column="name" />
        <result property="figmaAddr"			    column="figma_addr" />
        <result property="userMemo"	                column="user_memo" />
        <result property="vatTypeCd"	            column="vat_type_cd" />
        <result property="userEstimatedEndDate"		column="user_estimated_end_date" />
        <result property="statusCd"			        column="status_cd" />
        <result property="adminEstimatedEndDate"	column="admin_estimated_end_date" />
        <result property="hasMiddlePayment"			column="has_middle_payment" />
        <result property="adminMemo"			    column="admin_memo" />
        <result property="filePassword"			    column="file_password" />
        <result property="process"			        column="process" />
        <result property="situation"			    column="situation" />
        <result property="fileGroupSeq"		        column="file_group_seq" />
        <result property="createdBy"		        column="created_by" />
        <result property="createdDate"		        column="created_date" />
        <result property="modifiedBy"		        column="modified_by" />
        <result property="modifiedDate"		        column="modified_date" />
        <result property="isDeleted"		        column="is_deleted" />

        <result property="username"		            column="username" />
        <result property="fullname"		            column="fullname" />
        <result property="phone"		            column="phone" />
        <result property="email"		            column="email" />
        <result property="companyName"		        column="company_name" />
        <result property="vatPrice"		            column="vat_price" />
        <result property="vatNotPrice"		        column="vat_not_price" />
        <result property="adminSeq"		            column="admin_seq" />
        <result property="actualStartDate"		    column="actual_start_date" />
        <result property="actualEndDate"		    column="actual_end_date" />

        <association property="user" column="user_seq" select="kr.co.tagoplus.auth.service.UserMapper.getWithCompanyInfoByUserSeq" />
        <collection property="projectPayments" ofType="projectPayment"    column="seq"    select="kr.co.tagoplus.project.service.ProjectPaymentMapper.getByProjectSeq" />
    </resultMap>

    <sql id="whereQuery">
        a.is_deleted = 'N'
        <choose>
            <when test="type1 != null and type1 != ''">
                <if test="searchWrd != null and searchWrd != ''">
                    <if test="type1 == 'ID'">
                        AND (u.username LIKE CONCAT('%', #{searchWrd,jdbcType=VARCHAR}, '%'))
                    </if>
                    <if test="type1 == 'B_NAME'">
                        AND (c.name LIKE CONCAT('%', #{searchWrd,jdbcType=VARCHAR}, '%'))
                    </if>
                    <if test="type1 == 'CEO_NAME'">
                        AND (c.ceo_name LIKE CONCAT('%', #{searchWrd,jdbcType=VARCHAR}, '%'))
                    </if>
                </if>
            </when>
            <otherwise>
                <if test="searchWrd != null and searchWrd != ''">
                    AND (a.name LIKE CONCAT('%', #{searchWrd,jdbcType=VARCHAR}, '%'))
                </if>
            </otherwise>
        </choose>
    </sql>

    <sql id="whereQueryTaxList">
        a.is_deleted = 'N' AND
        pa.project_seq IS NOT NULL
        <choose>
            <when test="type2 != null and type2 != ''">
                <if test="searchWrd != null and searchWrd != ''">
                    <if test="type2 == 'ID'">
                        AND (u.username LIKE CONCAT('%', #{searchWrd,jdbcType=VARCHAR}, '%'))
                    </if>
                    <if test="type2 == 'PROJECT_NAME'">
                        AND (a.name LIKE CONCAT('%', #{searchWrd,jdbcType=VARCHAR}, '%'))
                    </if>
                </if>
            </when>
            <otherwise>
                <if test="searchWrd != null and searchWrd != ''">
                    AND (a.name LIKE CONCAT('%', #{searchWrd,jdbcType=VARCHAR}, '%'))
                </if>
            </otherwise>
        </choose>
        <if test="paymentType != ''">
            AND a.payment_type = #{paymentType}
        </if>
        <choose>
            <when test="listType == 'tax'">
                <choose>
                    <when test="startDate != '' and endDate == ''">
                        <![CDATA[
                            AND STR_TO_DATE(pa.actual_date, '%Y-%m-%d') >= #{startDate}
                        ]]>
                    </when>
                    <when test="startDate == '' and endDate != ''">
                        <![CDATA[
                            AND STR_TO_DATE(pa.actual_date, '%Y-%m-%d') <= #{endDate}
                        ]]>
                    </when>
                    <when test="startDate != '' and endDate != ''">
                        <![CDATA[
                             AND STR_TO_DATE(pa.actual_date, '%Y-%m-%d') >= #{startDate} AND STR_TO_DATE(pa.actual_date, '%Y-%m-%d') <= #{endDate}
                        ]]>
                    </when>
                </choose>
            </when>
            <otherwise>
                <choose>
                    <when test="startDate != '' and endDate == ''">
                        <![CDATA[
                            AND STR_TO_DATE(pa.estimated_date, '%Y-%m-%d') >= #{startDate}
                        ]]>
                    </when>
                    <when test="startDate == '' and endDate != ''">
                        <![CDATA[
                            AND STR_TO_DATE(pa.estimated_date, '%Y-%m-%d') <= #{endDate}
                        ]]>
                    </when>
                    <when test="startDate != '' and endDate != ''">
                        <![CDATA[
                             AND STR_TO_DATE(pa.estimated_date, '%Y-%m-%d') >= #{startDate} AND STR_TO_DATE(pa.estimated_date, '%Y-%m-%d') <= #{endDate}
                        ]]>
                    </when>
                </choose>
            </otherwise>
        </choose>
    </sql>

    <select id="getByFilter" parameterType="map" resultMap="projectMap">
        SELECT
            a.*
        FROM t_project a
        LEFT JOIN t_user u on u.seq = a.user_seq
        LEFT JOIN t_company c on c.user_seq = u.seq
        <where>
            <include refid="whereQuery" />
        </where>
        <choose>
            <when test="page.sort.sorted == true">
                ORDER BY
                <foreach collection="page.sort.orders" item="sortOrder" separator=",">
                    ${sortOrder.property} ${sortOrder.direction.name}
                </foreach>
            </when>
            <otherwise>
                ORDER BY a.seq DESC
            </otherwise>
        </choose>
        <include refid="commonMapper.pagingQuery" />
    </select>

    <select id="getByProjectSeq" parameterType="map" resultMap="projectMap">
        SELECT
        a.*
        FROM t_project a
        WHERE a.seq = #{seq}
    </select>

    <select id="countByFilter" parameterType="map" resultType="long">
        SELECT
            COUNT(a.seq)
        FROM t_project a
        LEFT JOIN t_user u on u.seq = a.user_seq
        LEFT JOIN t_company c on c.user_seq = u.seq
        <where>
            <include refid="whereQuery" />
        </where>
    </select>


    <select id="getProjectPaymentTaxList" parameterType="map" resultMap="projectMap">
        SELECT
            a.*
        FROM t_project a
        LEFT JOIN t_user u ON u.seq = a.user_seq
        LEFT JOIN t_company c ON c.user_seq = u.seq
        LEFT JOIN t_project_payment pa ON pa.project_seq = a.seq
        <where>
            <include refid="whereQueryTaxList" />
        </where>
        GROUP BY a.seq
        <choose>
            <when test="page.sort.sorted == true">
                ORDER BY
                <foreach collection="page.sort.orders" item="sortOrder" separator=",">
                    ${sortOrder.property} ${sortOrder.direction.name}
                </foreach>
            </when>
            <otherwise>
                ORDER BY a.seq DESC
            </otherwise>
        </choose>
        <include refid="commonMapper.pagingQuery" />
    </select>

    <select id="countTaxList" parameterType="map" resultType="long">
        SELECT
            COUNT(DISTINCT a.seq)
        FROM t_project a
        LEFT JOIN t_user u ON u.seq = a.user_seq
        LEFT JOIN t_company c ON c.user_seq = u.seq
        LEFT JOIN t_project_payment pa ON pa.project_seq = a.seq
        <where>
            <include refid="whereQueryTaxList" />
        </where>
    </select>

</mapper>
